PATH Dashen_log4jlib_1;
DECLARE ns NAMESPACE 'http://www.example.org/Gateway/';

CREATE COMPUTE MODULE RouterRequest_Compute
	DECLARE rc BOOLEAN;
	DECLARE LOG4J_PATH EXTERNAL CHARACTER;
	DECLARE LOG4J_ERROR EXTERNAL CHARACTER;
	
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL initLog4j(LOG4J_PATH) INTO rc;
		IF (rc = TRUE) THEN
		       CALL RouterRequest();
	      ELSE
			SET OutputRoot.JSON.Data.Log.Message = LOG4J_ERROR;
		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE RouterRequest() BEGIN
	SET Environment.ccidRef = InputRoot.Properties.CodedCharSetId;
    SET Environment.encodeRef = InputRoot.Properties.Encoding;
	SET Environment.domainDataRef = InputRoot.SOAP.Body;
	SET Environment.domainName = FIELDNAME(InputBody);    
	
	DECLARE id CHARACTER CAST(InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier AS CHARACTER);
	SET Environment.id = id;
	
	DECLARE BusinessQueueName,Businessflowname CHARACTER;                
	SET Businessflowname = FIELDNAME(InputRoot.SOAP.Body.[<]);
	DECLARE Qry1 CHARACTER 'SELECT * FROM DASHENBANK_SERVICE_CONFIG WHERE BUSINESSFLOW_NAME=?';
	DECLARE Data ROW;
	SET Data.values[] = PASSTHRU(Qry1 TO Database.DBDSN VALUES(Businessflowname));
	
	DECLARE id1 INTEGER;
	DECLARE TRANSACTION_STATUS1 CHARACTER 'Request Received from END USER';
	DECLARE CREATED_ON1 TIMESTAMP CURRENT_TIMESTAMP;
	DECLARE CREATED_BY1 CHARACTER 'ACE USER';
	-- PASSTHRU 'INSERT INTO ROUTER_LOG VALUES(?,?,?,?,?,?)' TO Database.DBDSN VALUES(id1.NEXTVAL,id,Businessflowname,TRANSACTION_STATUS1,CREATED_ON1,CREATED_BY1);
	INSERT INTO Database.ROUTER_LOG(SEQ_ID,REQ_ID,SERVICE_NAME,TRANSACTION_STATUS,CREATED_ON,CREATED_BY) VALUES(id1.NEXTVAL,id,Businessflowname,TRANSACTION_STATUS1,CREATED_ON1,CREATED_BY1);
	
	SET BusinessQueueName = Data.values.BUSINESSFLOW_INQ;
	SET Environment.name  = BusinessQueueName;
	SET Environment.data = InputRoot.SOAP.Body;
	
	---DECLARE flowname CHARACTER;
	---SET flowname = Data.values[1].BUSINESSFLOW_NAME;
--	CASE 
--	WHEN Businessflowname =  Data.values[1].BUSINESSFLOW_NAME  THEN
--		SET Environment.data = InputRoot.SOAP.Body;
--		SET BusinessQueueName = Data.values[1].BUSINESSFLOW_INQ;
--		SET Environment.name  = BusinessQueueName;
--	WHEN Businessflowname =  Data.values[2].BUSINESSFLOW_NAME THEN
--		SET Environment.data = InputRoot.SOAP.Body;
--		SET BusinessQueueName = Data.values[2].BUSINESSFLOW_INQ;
--		SET Environment.name  = BusinessQueueName;
--	WHEN Businessflowname =  Data.values[3].BUSINESSFLOW_NAME  THEN
--		SET Environment.data = InputRoot.SOAP.Body;
--		SET BusinessQueueName = Data.values[3].BUSINESSFLOW_INQ;
--		SET Environment.name  = BusinessQueueName;
--	WHEN Businessflowname =  Data.values[4].BUSINESSFLOW_NAME  THEN
--		SET Environment.data = InputRoot.SOAP.Body;
--		SET BusinessQueueName = Data.values[4].BUSINESSFLOW_INQ;
--		SET Environment.name  = BusinessQueueName;
--	ELSE
--		SET OutputRoot.SOAP.Body.ResponseCode = '999';
--		SET OutputRoot.SOAP.Body.ResponseStatus = 'OPERATION NOT FOUND';
--		  PROPAGATE TO TERMINAL 'out2' DELETE NONE;
--	END CASE;
	
	DECLARE blob1 BLOB ASBITSTREAM(InputRoot.SOAP.Body);
	
	SET OutputRoot.MQRFH2.usr.ReqId = id;
	SET OutputRoot.MQRFH2.usr.Flow_Name = MessageFlowLabel;
	SET OutputRoot.MQRFH2.usr.Payload_Type = 'Router_Request';
	SET OutputRoot.XMLNSC.DBLOG = blob1;
	            PROPAGATE TO TERMINAL 'out1' DELETE NONE;
	SET OutputRoot.MQRFH2 = NULL;
	SET OutputRoot.XMLNSC = NULL;
	            
	DECLARE ccidRef INTEGER Environment.ccidRef;
    DECLARE encodeRef INTEGER Environment.encodeRef;
	DECLARE domainDataRef REFERENCE TO InputRoot.SOAP.Body;
	DECLARE domainName CHARACTER Environment.domainName; 
	DECLARE LOG1 CHARACTER getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
	            
	CALL writeToLogFile(MessageFlowLabel,'ROUTERREQUESTFLOW_LOG','DEBUG','..........Router_Request Flow is Started...........') INTO rc;
	CALL writeToLogFile(MessageFlowLabel,'ROUTERREQUESTFLOW_LOG','DEBUG','Request data is: '||LOG1) INTO rc;
	        
	SET OutputRoot.MQRFH2.usr.ReqId = Environment.id;           
	SET OutputRoot.XMLNSC = Environment.data;
	SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName  = Environment.name;
	
	DECLARE TRANSACTION_STATUS2 CHARACTER 'Request Sent to Businessflow';
	DECLARE CREATED_ON2 TIMESTAMP CURRENT_TIMESTAMP;
    PASSTHRU 'UPDATE ROUTER_LOG SET TRANSACTION_STATUS=?,CREATED_ON=? WHERE REQ_ID=?' TO Database.DBDSN VALUES(TRANSACTION_STATUS2,CREATED_ON2,id);
	 
	DECLARE domainDataRef1 REFERENCE TO OutputRoot.XMLNSC;
	DECLARE domainName1 CHARACTER 'XMLNSC';
	DECLARE LOG4 CHARACTER getPayLoad(domainName1,domainDataRef1,encodeRef,ccidRef);
		
	CALL writeToLogFile(MessageFlowLabel,'ROUTERREQUESTFLOW_LOG','DEBUG','Response data is: '||LOG4) INTO rc;
	CALL writeToLogFile(MessageFlowLabel,'ROUTERREQUESTFLOW_LOG','DEBUG','..........Router_Request Flow is Ended...........') INTO rc;
	
	END;
END MODULE;