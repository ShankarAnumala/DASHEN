PATH Dashen_log4jlib_1;

CREATE COMPUTE MODULE RouterResponse_Compute
	DECLARE rc BOOLEAN;
	DECLARE LOG4J_PATH EXTERNAL CHARACTER;
	DECLARE LOG4J_ERROR EXTERNAL CHARACTER;
	
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL initLog4j(LOG4J_PATH) INTO rc;
		IF (rc = TRUE) THEN
	           CALL RouterResponse();
	     ELSE
			SET OutputRoot.SOAP.Body.Log.Message = LOG4J_ERROR;
		END IF;
		RETURN TRUE;
	END;

     CREATE PROCEDURE RouterResponse() BEGIN
    SET Environment.ccidRef1 = InputRoot.Properties.CodedCharSetId;
    SET Environment.encodeRef1 = InputRoot.Properties.Encoding;
	SET Environment.domainDataRef1 = InputRoot.SOAP.Body;
	SET Environment.domainName1 = FIELDNAME(InputBody); 
	 
 	DECLARE id CHARACTER InputRoot.HTTPRequestHeader."Content-Type";
    DECLARE refid CHARACTER SUBSTRING(InputRoot.HTTPRequestHeader."Content-Type" FROM 3);
    DECLARE refid1 INTEGER LENGTH(refid);
    SET refid = SUBSTRING(refid FROM 1 FOR refid1-1);
	SET Environment.id1 = id;
	
	DECLARE TRANSACTION_STATUS1 CHARACTER 'Response Received from Businessflow';
	DECLARE CREATED_ON1 TIMESTAMP CURRENT_TIMESTAMP;
	DECLARE qry1 CHARACTER 'UPDATE ROUTER_LOG SET TRANSACTION_STATUS=?,CREATED_ON=? WHERE REQ_ID LIKE ''%'||refid||'%''';
	SET Environment.val3[] = PASSTHRU(qry1 TO Database.DBDSN VALUES(TRANSACTION_STATUS1,CREATED_ON1));
	
	
--	DECLARE blob1 BLOB ASBITSTREAM(InputRoot.XMLNSC);
--	
--	SET OutputRoot.MQRFH2.usr.ReqId = id;
--	SET OutputRoot.MQRFH2.usr.Flow_Name = MessageFlowLabel;
--	SET OutputRoot.MQRFH2.usr.Payload_Type = 'Router_Response';
--	SET OutputRoot.XMLNSC.DBLOG = blob1;
--	            PROPAGATE TO TERMINAL 'out1' DELETE NONE;
--	SET OutputRoot.MQRFH2 = NULL;
--	SET OutputRoot.XMLNSC = NULL;

    DECLARE ccidRef INTEGER Environment.ccidRef1;
    DECLARE encodeRef INTEGER Environment.encodeRef1;
	DECLARE domainDataRef REFERENCE TO InputRoot.SOAP.Body;
	DECLARE domainName CHARACTER Environment.domainName1; 
	DECLARE payload CHARACTER getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
	CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
	DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC;
	CALL PayloadLogging(id,payload,'Router_Response',MessageFlowLabel,OutRef);
	
	CALL writeToLogFile(MessageFlowLabel,'ROUTERRESPONSE_LOG','INFO','..........Response Received from Businessflow...........') INTO rc;
	CALL writeToLogFile(MessageFlowLabel,'ROUTERRESPONSE_LOG','INFO','Request data is: '||payload) INTO rc;
	          
	SET OutputRoot.SOAP = InputRoot.SOAP;     
	SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = CAST(Environment.id1 AS BLOB);
	
	DECLARE TRANSACTION_STATUS2 CHARACTER 'Response sent to END USER';
	DECLARE CREATED_ON2 TIMESTAMP CURRENT_TIMESTAMP;
	SET Environment.val4[] = PASSTHRU(qry1 TO Database.DBDSN VALUES(TRANSACTION_STATUS2,CREATED_ON2));
		
	CALL writeToLogFile(MessageFlowLabel,'ROUTERRESPONSE_LOG','DEBUG','..........Response sent to END USER...........') INTO rc;
		 
	END;
END MODULE;